@@ -2192,6 +2192,16 @@
     my_free(mysql->options.extension->ssl_crlpath, MYF(MY_ALLOW_ZERO_PTR));
     if(hash_inited(&mysql->options.extension->connect_attrs))
       hash_free(&mysql->options.extension->connect_attrs);
+    {
+			struct mysql_async_context *ctxt;
+			if ((ctxt = mysql->options.extension->async_context) != 0) {
+				//if (ctxt->active==0) {
+					my_context_destroy(&ctxt->async_context);
+					my_free((gptr)ctxt, MYF(0));
+					mysql->options.extension->async_context=NULL;
+				//}
+			}
+		}
   }
   my_free((gptr)mysql->options.extension, MYF(MY_ALLOW_ZERO_PTR));
   /* clear all pointer */
@@ -2256,6 +2266,36 @@
 
     /* reset the connection in all active statements 
        todo: check stmt->mysql in mysql_stmt* functions ! */
+    for (;li_stmt;li_stmt= li_stmt->next)
+    {
+      stmt= (MYSQL_STMT *)li_stmt->data;
+      stmt->mysql= NULL;
+      SET_CLIENT_STMT_ERROR(stmt, CR_SERVER_LOST, SQLSTATE_UNKNOWN, 0);
+    }
+    mysql_close_memory(mysql);
+    mysql_close_options(mysql);
+    mysql->host_info=mysql->user=mysql->passwd=mysql->db=0;
+   
+    /* Clear pointers for better safety */
+    bzero((char*) &mysql->options,sizeof(mysql->options));
+    mysql->net.vio= 0;
+    if (mysql->free_me)
+      my_free((gptr) mysql,MYF(0));
+  }
+  DBUG_VOID_RETURN;
+}
+
+void STDCALL
+mysql_close_no_command(MYSQL *mysql)
+{
+   MYSQL_STMT *stmt;
+  DBUG_ENTER("mysql_close");
+  if (mysql)					/* Some simple safety */
+  {
+    LIST *li_stmt= mysql->stmts;
+
+    /* reset the connection in all active statements 
+       todo: check stmt->mysql in mysql_stmt* functions ! */
     for (;li_stmt;li_stmt= li_stmt->next)
     {
       stmt= (MYSQL_STMT *)li_stmt->data;
