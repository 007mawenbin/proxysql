@@ -137,15 +137,17 @@
 
 ssize_t
 my_recv_async(struct mysql_async_context *b, int fd,
-              unsigned char *buf, size_t size, int timeout)
+              unsigned char *buf, size_t size, int timeout, size_t tot_size)
 {
   ssize_t res;
 
   for (;;)
   {
-    res= recv(fd, buf, size, IF_WIN(0, MSG_DONTWAIT));
-    if (res >= 0 || IS_BLOCKING_ERROR())
-      return res;
+	if (tot_size < 1024*1024) {
+   	  res= recv(fd, buf, size, IF_WIN(0, MSG_DONTWAIT));
+      if (res >= 0 || IS_BLOCKING_ERROR())
+        return res;
+	}
     b->events_to_wait_for= MYSQL_WAIT_READ;
     if (timeout >= 0)
     {
@@ -570,19 +572,20 @@
 struct mysql_set_character_set_params {
   MYSQL *mysql;
   const char *csname;
+  uint charsetnr;
 };
 static void
 mysql_set_character_set_start_internal(void *d)
 {
 MK_ASYNC_INTERNAL_BODY(
   mysql_set_character_set,
-  (parms->mysql, parms->csname),
+  (parms->mysql, parms->csname, parms->charsetnr),
   parms->mysql,
   int,
   r_int)
 }
 int STDCALL
-mysql_set_character_set_start(int *ret, MYSQL *mysql, const char *csname)
+mysql_set_character_set_start(int *ret, MYSQL *mysql, const char *csname, uint charsetnr)
 {
 MK_ASYNC_START_BODY(
   mysql_set_character_set,
@@ -591,6 +594,7 @@
     WIN_SET_NONBLOCKING(mysql)
     parms.mysql= mysql;
     parms.csname= csname;
+    parms.charsetnr= charsetnr;
   },
   1,
   r_int,
